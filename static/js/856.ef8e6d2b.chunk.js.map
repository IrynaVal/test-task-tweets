{"version":3,"file":"static/js/856.ef8e6d2b.chunk.js","mappings":"6OAEMA,EAAW,8CAEjB,aAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAAaD,EAAb,WADlB,cACCE,EADD,OAELC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAASG,MAHhB,kBAIEH,EAASG,MAJX,kE,yCCDMC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8G,kBCCVE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,IACCC,IAGN,ECPYC,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAGvB,OACE,wBACqB,IAAlBA,EAAOC,QACND,EAAOE,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACtB,OACE,2BACE,gBAAKC,IAAKD,EAAQE,IAAKH,KACvB,uBAAIA,MAFGD,EAQZ,KAGR,ECoCD,EA/CmB,WAAO,IAAD,IACjBK,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAC3D,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,GJfR,WAAP,+BIgBIE,GACGC,MAAK,SAAA5B,GAGJ,GAFAF,QAAQC,IAAIC,GAEQ,IAAhBA,EAAKS,OACP,OAAOoB,QAAQC,OAAO,IAAIC,OAE5BR,EAAUvB,EACX,IACAgC,OAAM,SAAAC,GAILnC,QAAQC,IAAI,QACb,IACAmC,SAAQ,WACPT,GAAW,EACZ,GACJ,GAAE,KAGD,iCACE,SAACrB,EAAD,CAAUC,GAAIa,EAAoBiB,QAAlC,kBACmB,IAAlB3B,EAAOC,SAAgB,SAACF,EAAD,CAAQC,OAAQA,IACvCgB,IACC,wCAaP,C","sources":["services/getUsers.js","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/Tweets/Tweets.jsx","pages/TweetsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://644598130431e885f000cfc6.mockapi.io';\n\nexport async function getUsers() {\n  const response = await axios.get(`${BASE_URL}/users`);\n  console.log(response);\n  console.log(response.data);\n  return response.data;\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  margin-bottom: 20px;\n  text-decoration: none;\n  color: black;\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { BsArrowLeftShort } from 'react-icons/bs';\n// import PropTypes from 'prop-types';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <BsArrowLeftShort />\n      {children}\n    </StyledLink>\n  );\n};\n\n// BackLink.propTypes = {\n//   to: PropTypes.object.isRequired,\n//   children: PropTypes.node.isRequired,\n// };\n","// import { useLocation } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n// import { MovieTitle } from './MoviesList.styled';\n\nexport const Tweets = ({ tweets }) => {\n  // const location = useLocation();\n\n  return (\n    <ul>\n      {tweets.length !== 0 &&\n        tweets.map(({ id, user, avatar }) => {\n          return (\n            <li key={id}>\n              <img src={avatar} alt={user} />\n              <p>{user}</p>\n              {/* <MovieTitle to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </MovieTitle> */}\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\n// MoviesList.propTypes = {\n//   films: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       title: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n// };\n","import { useState, useEffect } from 'react';\n// import { Toaster, toast } from 'react-hot-toast';\n// import { ColorRing } from 'react-loader-spinner';\n// import { Searchbar } from '../components/Searchbar/Searchbar';\nimport { getUsers } from '../services/getUsers';\n// import { MoviesList } from 'components/MoviesList/MoviesList';\n// import { useSearchParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { Tweets } from 'components/Tweets/Tweets';\n\nconst TweetsPage = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/tweets');\n  const [tweets, setTweets] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getUsers()\n      .then(data => {\n        console.log(data);\n        //   console.log(data.results);\n        if (data.length === 0) {\n          return Promise.reject(new Error());\n        }\n        setTweets(data);\n      })\n      .catch(error => {\n        // toast.error(\n        //   'Sorry, there are no movies matching your search query. Please try again.'\n        // );\n        console.log('error');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <BackLink to={backLinkLocationRef.current}>Back</BackLink>\n      {tweets.length !== 0 && <Tweets tweets={tweets} />}\n      {loading && (\n        <p>Loading...</p>\n        // <ColorRing\n        //   visible={true}\n        //   height=\"80\"\n        //   width=\"80\"\n        //   ariaLabel=\"blocks-loading\"\n        //   wrapperStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\n        //   wrapperClass=\"blocks-wrapper\"\n        //   colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        // />\n      )}\n    </>\n  );\n};\nexport default TweetsPage;\n"],"names":["BASE_URL","axios","response","console","log","data","StyledLink","styled","Link","BackLink","to","children","Tweets","tweets","length","map","id","user","avatar","src","alt","location","useLocation","backLinkLocationRef","useRef","state","from","useState","setTweets","loading","setLoading","useEffect","getUsers","then","Promise","reject","Error","catch","error","finally","current"],"sourceRoot":""}