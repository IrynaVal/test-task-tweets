{"version":3,"file":"static/js/997.fbea6b33.chunk.js","mappings":"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","sources":["services/getUsers.js","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/Tweet/Tweet.styled.jsx","components/TweetButton/TweetButton.styled.jsx","components/TweetButton/TweetButton.jsx","components/Tweet/Tweet.jsx","components/Tweets/Tweets.styled.jsx","components/Tweets/Tweets.jsx","components/LoadButton/LoadButton.styled.jsx","components/LoadButton/LoadButton.jsx","pages/TweetsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://644598130431e885f000cfc6.mockapi.io';\n\nexport async function getUsers(page, tweetsPerPage) {\n  const response = await axios.get(\n    `${BASE_URL}/users?page=${page}&limit=${tweetsPerPage}`\n  );\n  return response.data;\n}\n\nexport function updateUser(id, followersNumber) {\n  return fetch(`${BASE_URL}/users/${id}`, {\n    method: 'PUT',\n    headers: { 'content-type': 'application/json' },\n    body: JSON.stringify({ followers: followersNumber }),\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    console.log('error');\n    throw new Error(response.statusText);\n  });\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  margin-bottom: 20px;\n  text-decoration: none;\n  color: #373737;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { BsArrowLeftShort } from 'react-icons/bs';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <BsArrowLeftShort />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\nimport Logo from '../../img/Logo.png';\nimport Picture from '../../img/Picture.png';\nimport Ellipse from '../../img/Ellipse.png';\n\nexport const Card = styled.li`\n  width: 380px;\n  height: 460px;\n\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n  position: relative;\n  list-style: none;\n\n  background-image: ${`url(${Logo})`}, ${`url(${Picture})`},\n    linear-gradient(114.99deg, #471ca9 -0.99%, #5736a3 54.28%, #4b2a99 78.99%);\n  background-repeat: no-repeat;\n  background-size: 76px 22px, 308px 168px, 100%;\n  background-position: top 20px left 20px, top 28px left 36px, 100%;\n\n  &::after {\n    position: absolute;\n    top: 214px;\n    left: 0;\n    content: '';\n    display: inline-block;\n    width: 100%;\n    height: 8px;\n    background-color: #ebd8ff;\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n      inset 0px -1.71846px 3.43693px #ae7be3,\n      inset 0px 3.43693px 2.5777px #fbf8ff;\n  }\n`;\n\nexport const ImgEllipse = styled.div`\n  width: 80px;\n  height: 80px;\n  background-image: linear-gradient(\n      114.99deg,\n      #471ca9 -0.99%,\n      #5736a3 54.28%,\n      #4b2a99 78.99%\n    ),\n    ${`url(${Ellipse})`};\n  border-radius: 50%;\n  position: absolute;\n  left: 150px;\n  top: 178px;\n  z-index: 100;\n\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n`;\n\nexport const ImgBox = styled.div`\n  position: relative;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 62px;\n  height: 62px;\n  overflow: hidden;\n  background: #5736a3;\n  border-radius: 50%;\n`;\n\nexport const TextBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 284px;\n  text-align: center;\n`;\n\nexport const Text = styled.p`\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  color: #ebd8ff;\n  text-transform: uppercase;\n`;\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  margin-left: 92px;\n  margin-right: 92px;\n  margin-top: 26px;\n  width: 196px;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  justify-content: center;\n  align-items: center;\n  padding: 14px;\n  color: #373737;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n\n    background-color: ${props => {\n      return props.isActive ? '#5cd3a8' : '#ebd8ff';\n    }}\n  }\n`;\n","import { StyledButton } from './TweetButton.styled';\n\nexport const TweetButton = ({ onClick, text, isActive = false }) => {\n  return (\n    <StyledButton type=\"button\" onClick={onClick} isActive={isActive}>\n      {text}\n    </StyledButton>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { Card, ImgBox, TextBox, Text, ImgEllipse } from './Tweet.styled';\nimport { TweetButton } from 'components/TweetButton/TweetButton';\nimport { updateUser } from 'services/getUsers';\n\nexport const Tweet = ({ item: { id, user, avatar, followers, tweets } }) => {\n  const [isFollowed, setIsFollowed] = useState(false);\n  const [followersNumber, setFollowersNumber] = useState(followers);\n  const [followingTweets, setFollowingTweets] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('following')) ?? [];\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem('following', JSON.stringify(followingTweets));\n  }, [followingTweets]);\n\n  const toggleIsFollowed = id => {\n    if (!isFollowed) {\n      setIsFollowed(true);\n\n      setFollowersNumber(prevState => prevState + 1);\n      updateUser(id, followersNumber + 1)\n        .then(data => {\n          setFollowingTweets(prevState => [...prevState, data]);\n          // setFollowingTweets([data]);\n          console.log(followingTweets);\n        })\n        .catch(error => {\n          toast.error('Sorry, error happened.');\n        });\n    } else {\n      setIsFollowed(false);\n      setFollowersNumber(prevState => prevState - 1);\n      updateUser(id, followersNumber - 1)\n        .then(data => {\n          setFollowingTweets(\n            followingTweets.filter(tweet => tweet.id !== data.id)\n          );\n          // followingTweets = newArray;\n\n          console.log(data);\n        })\n        .catch(error => {\n          toast.error('Sorry, error happened.');\n        });\n    }\n  };\n\n  return (\n    <Card key={id} isFollowed={isFollowed}>\n      <ImgEllipse>\n        <ImgBox>\n          <img src={avatar} alt={user} />\n        </ImgBox>\n      </ImgEllipse>\n      <TextBox>\n        <Text>{tweets.toLocaleString('en-IN')} tweets</Text>\n        <Text>{followersNumber.toLocaleString('en-IN')} followers</Text>\n      </TextBox>\n\n      <TweetButton\n        text={isFollowed ? 'following' : 'follow'}\n        isActive={isFollowed}\n        onClick={() => toggleIsFollowed(id)}\n      />\n    </Card>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TweetsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  justify-content: space-evenly;\n`;\n","// import { useState } from 'react';\nimport { Tweet } from 'components/Tweet/Tweet';\nimport { TweetsList } from './Tweets.styled';\n\nexport const Tweets = ({ tweets }) => {\n  console.log(tweets);\n\n  return (\n    <TweetsList>\n      {tweets.length !== 0 &&\n        tweets.map(tweet => {\n          return <Tweet item={tweet} key={tweet.id} />;\n        })}\n    </TweetsList>\n  );\n};\n\n/* {list.map(user => {\n          const followed = followedId.includes(user.id) ? true : false;\n\n          return (\n            <TweetCard\n              key={user.id}\n              userObj={user}\n              setFollowedUsers={setFollowedUsers}\n              followed={followed}\n            /> */\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 26px;\n  display: block;\n  width: 196px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  text-align: center;\n  padding: 14px;\n  color: #373737;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n`;\n","import { StyledButton } from './LoadButton.styled';\n\nexport const LoadButton = ({ onClick }) => {\n  return (\n    <StyledButton type=\"button\" onClick={onClick}>\n      Load more\n    </StyledButton>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Toaster, toast } from 'react-hot-toast';\nimport { ColorRing } from 'react-loader-spinner';\nimport { getUsers } from '../services/getUsers';\nimport { useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { Tweets } from 'components/Tweets/Tweets';\nimport { LoadButton } from 'components/LoadButton/LoadButton';\n\nconst TweetsPage = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const [tweets, setTweets] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [tweetsPerPage] = useState(3);\n\n  useEffect(() => {\n    setLoading(true);\n    getUsers(page, tweetsPerPage)\n      .then(data => {\n        if (data.length === 0) {\n          return Promise.reject(new Error());\n        }\n\n        setTweets(prevState => {\n          return [...prevState, ...data];\n        });\n      })\n      .catch(error => {\n        toast.error('Sorry, error happened.');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [page, tweetsPerPage]);\n\n  const handleLoad = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  return (\n    <>\n      <BackLink to={backLinkLocationRef.current}>Back</BackLink>\n      {tweets.length !== 0 && <Tweets tweets={tweets} />}\n      {loading && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n      {tweets.length !== 0 && !loading && <LoadButton onClick={handleLoad} />}\n      <Toaster />\n    </>\n  );\n};\nexport default TweetsPage;\n"],"names":["BASE_URL","page","tweetsPerPage","axios","response","data","updateUser","id","followersNumber","fetch","method","headers","body","JSON","stringify","followers","then","ok","json","console","log","Error","statusText","StyledLink","styled","Link","BackLink","to","children","Card","Picture","ImgEllipse","ImgBox","TextBox","Text","StyledButton","props","isActive","TweetButton","onClick","text","type","Tweet","item","user","avatar","tweets","useState","isFollowed","setIsFollowed","setFollowersNumber","parse","window","localStorage","getItem","followingTweets","setFollowingTweets","useEffect","setItem","src","alt","toLocaleString","prevState","filter","tweet","catch","error","toast","toggleIsFollowed","TweetsList","Tweets","length","map","LoadButton","location","useLocation","backLinkLocationRef","useRef","state","from","setTweets","loading","setLoading","setPage","getUsers","Promise","reject","finally","current","visible","height","width","ariaLabel","wrapperStyle","marginLeft","marginRight","wrapperClass","colors"],"sourceRoot":""}