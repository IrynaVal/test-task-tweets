{"version":3,"file":"static/js/661.8e30f65e.chunk.js","mappings":"+PAEMA,EAAW,8CAEjB,aAAO,OAAP,oBAAO,WAAwBC,EAAMC,GAA9B,uFACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uBACKC,EADL,kBACmBC,IAFrC,cACCE,EADD,OAILC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAASG,MALhB,kBAMEH,EAASG,MANX,kE,yCCDMC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8G,kBCCVE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,IACCC,IAGN,ECPYC,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAGvB,OACE,wBACqB,IAAlBA,EAAOC,QACND,EAAOE,KAAI,YAA8C,IAA3CC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,UAAWN,EAAa,EAAbA,OAIzC,OACE,2BACE,gBAAKO,IAAKF,EAAQG,IAAKJ,KACvB,yBACGJ,EADH,IANe,SAOQS,kBAEvB,yBACGH,EADH,IARkB,YASWG,kBAE7B,mBAAQC,KAAK,SAAb,SAVe,SAUmBD,kBAR3BN,EAeZ,KAGR,EC9BYQ,EAAS,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OACE,mBAAQF,KAAK,SAASE,QAASA,EAA/B,sBAIH,ECgED,EA5DmB,WAAO,IAAD,IACjBC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAC3D,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAeoB,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAAwBH,EAAAA,EAAAA,UAAS,GAAjC,eAAOjC,EAAP,KAAaqC,EAAb,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,GAA1BhC,GAAP,gBAEAqC,EAAAA,EAAAA,YAAU,WACRF,GAAW,GLlBR,SAAP,oCKmBIG,CAASvC,EAAMC,GACZuC,MAAK,SAAAlC,GAEJ,GAAoB,IAAhBA,EAAKS,OACP,OAAO0B,QAAQC,OAAO,IAAIC,OAG5BT,GAAU,SAAAU,GAGR,OAFAxC,QAAQC,IAAIuC,GACZxC,QAAQC,IAAIC,GACN,GAAN,eAAWsC,IAAX,OAAyBtC,GAC1B,GAGF,IACAuC,OAAM,SAAAC,GAIL1C,QAAQC,IAAI,QACb,IACA0C,SAAQ,WACPX,GAAW,EACZ,GACJ,GAAE,CAACpC,EAAMC,IAMV,OACE,iCACE,SAACS,EAAD,CAAUC,GAAIkB,EAAoBmB,QAAlC,kBACmB,IAAlBlC,EAAOC,SAAgB,SAACF,EAAD,CAAQC,OAAQA,IACvCqB,IAEC,SAAC,KAAD,CACEc,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAEC,WAAY,OAAQC,YAAa,QACjDC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,aAGtC,IAAlB3C,EAAOC,SAAiBoB,IAAW,SAACV,EAAD,CAAQC,QApB7B,WACjBW,GAAQ,SAAAO,GAAS,OAAIA,EAAY,CAAhB,GAClB,MAqBF,C","sources":["services/getUsers.js","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/Tweets/Tweets.jsx","components/Button/Button.jsx","pages/TweetsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://644598130431e885f000cfc6.mockapi.io';\n\nexport async function getUsers(page, tweetsPerPage) {\n  const response = await axios.get(\n    `${BASE_URL}/users?page=${page}&limit=${tweetsPerPage}`\n  );\n  console.log(response);\n  console.log(response.data);\n  return response.data;\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  margin-bottom: 20px;\n  text-decoration: none;\n  color: black;\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { BsArrowLeftShort } from 'react-icons/bs';\n// import PropTypes from 'prop-types';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <BsArrowLeftShort />\n      {children}\n    </StyledLink>\n  );\n};\n\n// BackLink.propTypes = {\n//   to: PropTypes.object.isRequired,\n//   children: PropTypes.node.isRequired,\n// };\n","// import { useLocation } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n// import { MovieTitle } from './MoviesList.styled';\n\nexport const Tweets = ({ tweets }) => {\n  // const location = useLocation();\n\n  return (\n    <ul>\n      {tweets.length !== 0 &&\n        tweets.map(({ id, user, avatar, followers, tweets }) => {\n          const tweetsText = 'tweets';\n          const followersText = 'followers';\n          const buttonText = 'follow';\n          return (\n            <li key={id}>\n              <img src={avatar} alt={user} />\n              <p>\n                {tweets} {tweetsText.toUpperCase()}\n              </p>\n              <p>\n                {followers} {followersText.toUpperCase()}\n              </p>\n              <button type=\"button\">{buttonText.toUpperCase()}</button>\n              {/* <Link to={`${product.id}`} state={{ from: location }}>\n            <img src=\"https://via.placeholder.com/200x100\" alt=\"\" />\n            <ProductName>{product.name}</ProductName>\n          </Link> */}\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\n// MoviesList.propTypes = {\n//   films: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       title: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n// };\n","// import PropTypes from 'prop-types';\n// import css from './Button.module.css';\n\nexport const Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n};\n\n// Button.propTypes = {\n//   onClick: PropTypes.func.isRequired,\n// };\n","import { useState, useEffect } from 'react';\n// import { Toaster, toast } from 'react-hot-toast';\nimport { ColorRing } from 'react-loader-spinner';\n// import { Searchbar } from '../components/Searchbar/Searchbar';\nimport { getUsers } from '../services/getUsers';\n// import { MoviesList } from 'components/MoviesList/MoviesList';\n// import { useSearchParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { Tweets } from 'components/Tweets/Tweets';\nimport { Button } from 'components/Button/Button';\n\nconst TweetsPage = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const [tweets, setTweets] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [tweetsPerPage] = useState(3);\n\n  useEffect(() => {\n    setLoading(true);\n    getUsers(page, tweetsPerPage)\n      .then(data => {\n        // console.log(data);\n        if (data.length === 0) {\n          return Promise.reject(new Error());\n        }\n\n        setTweets(prevState => {\n          console.log(prevState);\n          console.log(data);\n          return [...prevState, ...data];\n        });\n\n        // setTweets(data);\n      })\n      .catch(error => {\n        // toast.error(\n        //   'Sorry, there are no movies matching your search query. Please try again.'\n        // );\n        console.log('error');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [page, tweetsPerPage]);\n\n  const handleLoad = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  return (\n    <>\n      <BackLink to={backLinkLocationRef.current}>Back</BackLink>\n      {tweets.length !== 0 && <Tweets tweets={tweets} />}\n      {loading && (\n        // <p>Loading...</p>\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n      {tweets.length !== 0 && !loading && <Button onClick={handleLoad} />}\n    </>\n  );\n};\nexport default TweetsPage;\n"],"names":["BASE_URL","page","tweetsPerPage","axios","response","console","log","data","StyledLink","styled","Link","BackLink","to","children","Tweets","tweets","length","map","id","user","avatar","followers","src","alt","toUpperCase","type","Button","onClick","location","useLocation","backLinkLocationRef","useRef","state","from","useState","setTweets","loading","setLoading","setPage","useEffect","getUsers","then","Promise","reject","Error","prevState","catch","error","finally","current","visible","height","width","ariaLabel","wrapperStyle","marginLeft","marginRight","wrapperClass","colors"],"sourceRoot":""}