{"version":3,"file":"static/js/654.4bf38c3c.chunk.js","mappings":"qOAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8G,kBCCVE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,IACCC,IAGN,ECPYC,EAAS,WAKlB,OACE,sCAgBH,EC+CH,EA7De,WAAO,IAAD,IACbC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAqC3D,OACE,iCACE,SAACT,EAAD,CAAUC,GAAIK,EAAoBI,QAAlC,mBACA,SAACP,EAAD,MAkBL,C","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/Tweets/Tweets.jsx","pages/Tweets.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  margin-bottom: 20px;\n  text-decoration: none;\n  color: black;\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { BsArrowLeftShort } from 'react-icons/bs';\nimport PropTypes from 'prop-types';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <BsArrowLeftShort />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","// import { useLocation } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n// import { MovieTitle } from './MoviesList.styled';\n\nexport const Tweets = () =>\n  // { tweets }\n  {\n    //   const location = useLocation();\n\n    return (\n      <p>Tweets List</p>\n      //   <ul>\n      //   {\n      /* {films.length !== 0 &&\n        films.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <MovieTitle to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </MovieTitle>\n            </li>\n          );\n        })} */\n      //   }\n      // </ul>\n    );\n  };\n\n// MoviesList.propTypes = {\n//   films: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       title: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n// };\n","// import { useState, useEffect } from 'react';\n// import { Toaster, toast } from 'react-hot-toast';\n// import { ColorRing } from 'react-loader-spinner';\n// import { Searchbar } from '../components/Searchbar/Searchbar';\n// import { getFilmByQuery } from '../services/getFilms';\n// import { MoviesList } from 'components/MoviesList/MoviesList';\n// import { useSearchParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { Tweets } from 'components/Tweets/Tweets';\n\nconst Movies = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/tweets');\n  //   const [searchParams] = useSearchParams();\n  //   const [searchQuery, setSearchQuery] = useState(\n  //     searchParams.get('query') ?? ''\n  //   );\n  //   const [films, setFilms] = useState([]);\n  //   const [loading, setLoading] = useState(false);\n\n  //   useEffect(() => {\n  //     if (!searchQuery) {\n  //       return;\n  //     }\n\n  //     setLoading(true);\n  //     getFilmByQuery(searchQuery)\n  //       .then(data => {\n  //         // console.log(data.results);\n  //         if (data.results.length === 0) {\n  //           return Promise.reject(new Error());\n  //         }\n  //         setFilms(data.results);\n  //       })\n  //       .catch(error => {\n  //         toast.error(\n  //           'Sorry, there are no movies matching your search query. Please try again.'\n  //         );\n  //       })\n  //       .finally(() => {\n  //         setLoading(false);\n  //       });\n  //   }, [searchQuery]);\n\n  //   const formSubmitHandler = searchQuery => {\n  //     setSearchQuery(searchQuery.trim());\n  //     setFilms([]);\n  //   };\n\n  return (\n    <>\n      <BackLink to={backLinkLocationRef.current}>Back</BackLink>\n      <Tweets />\n      {/* <p>Tweet</p> */}\n      {/* <Toaster position=\"top-right\" />\n      <Searchbar onSubmit={formSubmitHandler} />\n      {films.length !== 0 && <MoviesList films={films} />}\n      {loading && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )} */}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["StyledLink","styled","Link","BackLink","to","children","Tweets","location","useLocation","backLinkLocationRef","useRef","state","from","current"],"sourceRoot":""}